
Ultrasonic_Tuto.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000027c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000228  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000027c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002ac  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000002ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000aed  00000000  00000000  0000030c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000082d  00000000  00000000  00000df9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003bc  00000000  00000000  00001626  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000019e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000041f  00000000  00000000  00001a08  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002ac  00000000  00000000  00001e27  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000020d3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	c4 c0       	rjmp	.+392    	; 0x224 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:
#define SOUND_VELOCITY 340UL
int main(void)
{
	unsigned int distance;
	unsigned int i;
	DDRB = 0x10;
  9e:	80 e1       	ldi	r24, 0x10	; 16
  a0:	87 bb       	out	0x17, r24	; 23
	DDRE = ((DDRE | (1<<TRIG)) & ~(1<<ECHO));
  a2:	82 b1       	in	r24, 0x02	; 2
  a4:	8f 77       	andi	r24, 0x7F	; 127
  a6:	80 64       	ori	r24, 0x40	; 64
  a8:	82 b9       	out	0x02, r24	; 2
	
	while(1)
	{
		TCCR1B = 0x03;
  aa:	83 e0       	ldi	r24, 0x03	; 3
  ac:	8e bd       	out	0x2e, r24	; 46
		PORTE &= ~(1<<TRIG);
  ae:	83 b1       	in	r24, 0x03	; 3
  b0:	8f 7b       	andi	r24, 0xBF	; 191
  b2:	83 b9       	out	0x03, r24	; 3
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b4:	23 e0       	ldi	r18, 0x03	; 3
  b6:	2a 95       	dec	r18
  b8:	f1 f7       	brne	.-4      	; 0xb6 <main+0x18>
  ba:	00 00       	nop
		_delay_us(10);
		PORTE |= (1<<TRIG);
  bc:	83 b1       	in	r24, 0x03	; 3
  be:	80 64       	ori	r24, 0x40	; 64
  c0:	83 b9       	out	0x03, r24	; 3
  c2:	83 e0       	ldi	r24, 0x03	; 3
  c4:	8a 95       	dec	r24
  c6:	f1 f7       	brne	.-4      	; 0xc4 <main+0x26>
  c8:	00 00       	nop
		_delay_us(10);
		PORTE &= ~(1<<TRIG);
  ca:	83 b1       	in	r24, 0x03	; 3
  cc:	8f 7b       	andi	r24, 0xBF	; 191
  ce:	83 b9       	out	0x03, r24	; 3
		while(!(PINE & (1<<ECHO)));
  d0:	0f 9b       	sbis	0x01, 7	; 1
  d2:	fe cf       	rjmp	.-4      	; 0xd0 <main+0x32>
		TCNT1 = 0x0000;
  d4:	1d bc       	out	0x2d, r1	; 45
  d6:	1c bc       	out	0x2c, r1	; 44
		while(PINE & (1<<ECHO));
  d8:	0f 99       	sbic	0x01, 7	; 1
  da:	fe cf       	rjmp	.-4      	; 0xd8 <main+0x3a>
		TCCR1B = 0x00;
  dc:	1e bc       	out	0x2e, r1	; 46
		distance = (unsigned int)(SOUND_VELOCITY * (TCNT1 * 4 / 2) / 1000);
  de:	2c b5       	in	r18, 0x2c	; 44
  e0:	3d b5       	in	r19, 0x2d	; 45
  e2:	22 0f       	add	r18, r18
  e4:	33 1f       	adc	r19, r19
  e6:	22 0f       	add	r18, r18
  e8:	33 1f       	adc	r19, r19
  ea:	36 95       	lsr	r19
  ec:	27 95       	ror	r18
  ee:	a4 e5       	ldi	r26, 0x54	; 84
  f0:	b1 e0       	ldi	r27, 0x01	; 1
  f2:	89 d0       	rcall	.+274    	; 0x206 <__umulhisi3>
  f4:	28 ee       	ldi	r18, 0xE8	; 232
  f6:	33 e0       	ldi	r19, 0x03	; 3
  f8:	40 e0       	ldi	r20, 0x00	; 0
  fa:	50 e0       	ldi	r21, 0x00	; 0
  fc:	62 d0       	rcall	.+196    	; 0x1c2 <__udivmodsi4>

		//음파의 속도는 340m/s 이므로 1cm를 이동하는데 약 29us.왕복거리
		
		if(distance < 300){
  fe:	2c 32       	cpi	r18, 0x2C	; 44
 100:	91 e0       	ldi	r25, 0x01	; 1
 102:	39 07       	cpc	r19, r25
 104:	90 f0       	brcs	.+36     	; 0x12a <main+0x8c>
 106:	17 c0       	rjmp	.+46     	; 0x136 <main+0x98>
			for(i=0; i<5; i++)
			{
				PORTB = 0x10;
 108:	20 e1       	ldi	r18, 0x10	; 16
 10a:	28 bb       	out	0x18, r18	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 10c:	e9 ef       	ldi	r30, 0xF9	; 249
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	31 97       	sbiw	r30, 0x01	; 1
 112:	f1 f7       	brne	.-4      	; 0x110 <main+0x72>
 114:	00 c0       	rjmp	.+0      	; 0x116 <main+0x78>
 116:	00 00       	nop
				_delay_ms(1);
				PORTB = 0x00;
 118:	18 ba       	out	0x18, r1	; 24
 11a:	e9 ef       	ldi	r30, 0xF9	; 249
 11c:	f0 e0       	ldi	r31, 0x00	; 0
 11e:	31 97       	sbiw	r30, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <main+0x80>
 122:	00 c0       	rjmp	.+0      	; 0x124 <main+0x86>
 124:	00 00       	nop
		distance = (unsigned int)(SOUND_VELOCITY * (TCNT1 * 4 / 2) / 1000);

		//음파의 속도는 340m/s 이므로 1cm를 이동하는데 약 29us.왕복거리
		
		if(distance < 300){
			for(i=0; i<5; i++)
 126:	01 96       	adiw	r24, 0x01	; 1
 128:	02 c0       	rjmp	.+4      	; 0x12e <main+0x90>
 12a:	80 e0       	ldi	r24, 0x00	; 0
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	85 30       	cpi	r24, 0x05	; 5
 130:	91 05       	cpc	r25, r1
 132:	50 f3       	brcs	.-44     	; 0x108 <main+0x6a>
 134:	ba cf       	rjmp	.-140    	; 0xaa <main+0xc>
				PORTB = 0x10;
				_delay_ms(1);
				PORTB = 0x00;
				_delay_ms(1);
			}
			} else if(distance < 600){
 136:	28 35       	cpi	r18, 0x58	; 88
 138:	f2 e0       	ldi	r31, 0x02	; 2
 13a:	3f 07       	cpc	r19, r31
 13c:	90 f0       	brcs	.+36     	; 0x162 <main+0xc4>
 13e:	1d c0       	rjmp	.+58     	; 0x17a <main+0xdc>
			for(i=0; i<5; i++)
			{
				PORTB = 0x10;
 140:	20 e1       	ldi	r18, 0x10	; 16
 142:	28 bb       	out	0x18, r18	; 24
 144:	e9 ef       	ldi	r30, 0xF9	; 249
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	31 97       	sbiw	r30, 0x01	; 1
 14a:	f1 f7       	brne	.-4      	; 0x148 <main+0xaa>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <main+0xb0>
 14e:	00 00       	nop
				_delay_ms(1);
				PORTB = 0x00;
 150:	18 ba       	out	0x18, r1	; 24
 152:	e9 ef       	ldi	r30, 0xF9	; 249
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	31 97       	sbiw	r30, 0x01	; 1
 158:	f1 f7       	brne	.-4      	; 0x156 <main+0xb8>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <main+0xbe>
 15c:	00 00       	nop
				_delay_ms(1);
				PORTB = 0x00;
				_delay_ms(1);
			}
			} else if(distance < 600){
			for(i=0; i<5; i++)
 15e:	01 96       	adiw	r24, 0x01	; 1
 160:	02 c0       	rjmp	.+4      	; 0x166 <main+0xc8>
 162:	80 e0       	ldi	r24, 0x00	; 0
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	85 30       	cpi	r24, 0x05	; 5
 168:	91 05       	cpc	r25, r1
 16a:	50 f3       	brcs	.-44     	; 0x140 <main+0xa2>
 16c:	87 ea       	ldi	r24, 0xA7	; 167
 16e:	91 e6       	ldi	r25, 0x61	; 97
 170:	01 97       	sbiw	r24, 0x01	; 1
 172:	f1 f7       	brne	.-4      	; 0x170 <main+0xd2>
 174:	00 c0       	rjmp	.+0      	; 0x176 <main+0xd8>
 176:	00 00       	nop
 178:	98 cf       	rjmp	.-208    	; 0xaa <main+0xc>
				_delay_ms(1);
				PORTB = 0x00;
				_delay_ms(1);
			}
			_delay_ms(100);
			}   else if(distance < 1000){
 17a:	28 3e       	cpi	r18, 0xE8	; 232
 17c:	33 40       	sbci	r19, 0x03	; 3
 17e:	90 f0       	brcs	.+36     	; 0x1a4 <main+0x106>
 180:	94 cf       	rjmp	.-216    	; 0xaa <main+0xc>
			for(i=0; i<5; i++)
			{
				PORTB = 0x10;
 182:	20 e1       	ldi	r18, 0x10	; 16
 184:	28 bb       	out	0x18, r18	; 24
 186:	e9 ef       	ldi	r30, 0xF9	; 249
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	31 97       	sbiw	r30, 0x01	; 1
 18c:	f1 f7       	brne	.-4      	; 0x18a <main+0xec>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <main+0xf2>
 190:	00 00       	nop
				_delay_ms(1);
				PORTB = 0x00;
 192:	18 ba       	out	0x18, r1	; 24
 194:	e9 ef       	ldi	r30, 0xF9	; 249
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	31 97       	sbiw	r30, 0x01	; 1
 19a:	f1 f7       	brne	.-4      	; 0x198 <main+0xfa>
 19c:	00 c0       	rjmp	.+0      	; 0x19e <main+0x100>
 19e:	00 00       	nop
				PORTB = 0x00;
				_delay_ms(1);
			}
			_delay_ms(100);
			}   else if(distance < 1000){
			for(i=0; i<5; i++)
 1a0:	01 96       	adiw	r24, 0x01	; 1
 1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <main+0x10a>
 1a4:	80 e0       	ldi	r24, 0x00	; 0
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	85 30       	cpi	r24, 0x05	; 5
 1aa:	91 05       	cpc	r25, r1
 1ac:	50 f3       	brcs	.-44     	; 0x182 <main+0xe4>
 1ae:	ff e5       	ldi	r31, 0x5F	; 95
 1b0:	2a ee       	ldi	r18, 0xEA	; 234
 1b2:	80 e0       	ldi	r24, 0x00	; 0
 1b4:	f1 50       	subi	r31, 0x01	; 1
 1b6:	20 40       	sbci	r18, 0x00	; 0
 1b8:	80 40       	sbci	r24, 0x00	; 0
 1ba:	e1 f7       	brne	.-8      	; 0x1b4 <main+0x116>
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <main+0x120>
 1be:	00 00       	nop
 1c0:	74 cf       	rjmp	.-280    	; 0xaa <main+0xc>

000001c2 <__udivmodsi4>:
 1c2:	a1 e2       	ldi	r26, 0x21	; 33
 1c4:	1a 2e       	mov	r1, r26
 1c6:	aa 1b       	sub	r26, r26
 1c8:	bb 1b       	sub	r27, r27
 1ca:	fd 01       	movw	r30, r26
 1cc:	0d c0       	rjmp	.+26     	; 0x1e8 <__udivmodsi4_ep>

000001ce <__udivmodsi4_loop>:
 1ce:	aa 1f       	adc	r26, r26
 1d0:	bb 1f       	adc	r27, r27
 1d2:	ee 1f       	adc	r30, r30
 1d4:	ff 1f       	adc	r31, r31
 1d6:	a2 17       	cp	r26, r18
 1d8:	b3 07       	cpc	r27, r19
 1da:	e4 07       	cpc	r30, r20
 1dc:	f5 07       	cpc	r31, r21
 1de:	20 f0       	brcs	.+8      	; 0x1e8 <__udivmodsi4_ep>
 1e0:	a2 1b       	sub	r26, r18
 1e2:	b3 0b       	sbc	r27, r19
 1e4:	e4 0b       	sbc	r30, r20
 1e6:	f5 0b       	sbc	r31, r21

000001e8 <__udivmodsi4_ep>:
 1e8:	66 1f       	adc	r22, r22
 1ea:	77 1f       	adc	r23, r23
 1ec:	88 1f       	adc	r24, r24
 1ee:	99 1f       	adc	r25, r25
 1f0:	1a 94       	dec	r1
 1f2:	69 f7       	brne	.-38     	; 0x1ce <__udivmodsi4_loop>
 1f4:	60 95       	com	r22
 1f6:	70 95       	com	r23
 1f8:	80 95       	com	r24
 1fa:	90 95       	com	r25
 1fc:	9b 01       	movw	r18, r22
 1fe:	ac 01       	movw	r20, r24
 200:	bd 01       	movw	r22, r26
 202:	cf 01       	movw	r24, r30
 204:	08 95       	ret

00000206 <__umulhisi3>:
 206:	a2 9f       	mul	r26, r18
 208:	b0 01       	movw	r22, r0
 20a:	b3 9f       	mul	r27, r19
 20c:	c0 01       	movw	r24, r0
 20e:	a3 9f       	mul	r26, r19
 210:	70 0d       	add	r23, r0
 212:	81 1d       	adc	r24, r1
 214:	11 24       	eor	r1, r1
 216:	91 1d       	adc	r25, r1
 218:	b2 9f       	mul	r27, r18
 21a:	70 0d       	add	r23, r0
 21c:	81 1d       	adc	r24, r1
 21e:	11 24       	eor	r1, r1
 220:	91 1d       	adc	r25, r1
 222:	08 95       	ret

00000224 <_exit>:
 224:	f8 94       	cli

00000226 <__stop_program>:
 226:	ff cf       	rjmp	.-2      	; 0x226 <__stop_program>
